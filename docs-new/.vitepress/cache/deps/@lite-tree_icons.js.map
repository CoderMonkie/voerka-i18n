{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@lite-tree+icons@1.0.6/node_modules/@lite-tree/icons/index.js"],
  "sourcesContent": ["\r\nexport const SupportedIcons =  [\r\n    'ts',\r\n    'tsx',\r\n    'js',\r\n    'jsx',\r\n    'json',\r\n    'vue',\r\n    'md',\r\n    'gif',\r\n    'jpg',\r\n    'jpeg',\r\n    'png',\r\n    'bmp',\r\n    'webp',\r\n    'ico',\r\n    'tiff',\r\n    'img',\r\n    'txt',\r\n    'svg',\r\n    'java',\r\n    'go',\r\n    'less',\r\n    'sass',\r\n    'scss',\r\n    'css',\r\n    'htm',\r\n    \"yml\",\r\n    'com',\r\n    'yaml',\r\n    'py',\r\n    'pyc',\r\n    'dat',\r\n    'db',\r\n    \"astro\",\r\n    'html',\r\n    'yaml',\r\n    'pdf',\r\n    'doc',\r\n    'docx',\r\n    'mp4',\r\n    'avi',\r\n    'mov',\r\n    'wmv',\r\n    'mpeg',\r\n    'mpg',\r\n    'rm',\r\n    'ram',\r\n    'swf',\r\n    'flv',\r\n    'video',\r\n    'xls',\r\n    'xlsx',\r\n    'ppt',\r\n    'pptx',\r\n    'exe',\r\n    'xml',\r\n    'svelte',\r\n    'cpp',\r\n    'zip',\r\n    'tar',\r\n    'c',\r\n    'gz',\r\n    'bz2',\r\n    'rar',\r\n    'mp3',\r\n    'ogg',\r\n    'flac',\r\n    'wav',\r\n    'csv',\r\n    'php',\r\n    'vb',\r\n    'cs',\r\n    'kt',\r\n    'h',\r\n    'hpp',\r\n    'hxx',\r\n    'bat'\r\n]\r\nexport function getFileTypeIcon(node){\r\n    // 优先使用节点数据中指定的图标\r\n    const icon= String(node.icon).trim()\r\n    \r\n    if(icon.length>0) return node.icon\r\n    // 如果节点有子节点，使用默认图标folder-open/folder\r\n    if(node.children && node.children.length>0){\r\n        const isOpen = node.open==undefined ? true : node.open;\r\n        return isOpen ? 'folder-open' : 'folder'\r\n    }\r\n    const title = node.title.trim()\r\n    // 如果节点的标题以'/'结尾代表是一个文件夹，使用默认图标folder\r\n    if(title.endsWith('/')) {\r\n        node.icon=\"folder\"\r\n        node.title = title.slice(0,-1)\r\n        return 'folder'\r\n    }\r\n    // 取得文件扩展名，如果不包括'.'，则是文件\r\n    if(title.indexOf('.')<0) return 'file'\r\n\r\n    const index = SupportedIcons.findIndex(ext=>ext==title.endsWith(`.${ext}`))\r\n    if(index>=0) {\r\n        return SupportedIcons[index]\r\n    }\r\n    return 'file'\r\n}\r\n\r\n"],
  "mappings": ";AACO,IAAM,iBAAkgBAAgB,MAAK;AAEjC,QAAM,OAAM,OAAO,KAAK,IAAI,EAAE,KAAK;AAEnC,MAAG,KAAK,SAAO,EAAG,QAAO,KAAK;AAE9B,MAAG,KAAK,YAAY,KAAK,SAAS,SAAO,GAAE;AACvC,UAAM,SAAS,KAAK,QAAM,SAAY,OAAO,KAAK;AAClD,WAAO,SAAS,gBAAgB;AAAA,EACpC;AACA,QAAM,QAAQ,KAAK,MAAM,KAAK;AAE9B,MAAG,MAAM,SAAS,GAAG,GAAG;AACpB,SAAK,OAAK;AACV,SAAK,QAAQ,MAAM,MAAM,GAAE,EAAE;AAC7B,WAAO;AAAA,EACX;AAEA,MAAG,MAAM,QAAQ,GAAG,IAAE,EAAG,QAAO;AAEhC,QAAM,QAAQ,eAAe,UAAU,SAAK,OAAK,MAAM,SAAS,IAAI,GAAG,EAAE,CAAC;AAC1E,MAAG,SAAO,GAAG;AACT,WAAO,eAAe,KAAK;AAAA,EAC/B;AACA,SAAO;AACX;",
  "names": []
}
